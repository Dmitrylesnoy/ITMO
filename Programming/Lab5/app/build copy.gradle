/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
//     id 'com.intershop.gradle.jaxb' version '7.0.0'
    id("com.javagen.schema-gen") version "0.9.1"
}

// jaxb {
//     javaGen {
//         posConfig {
//             packageName = ''
//             schema = file('pos.xsd')
//         }
//     }
// }

configurations {
   jaxb
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // maven {
    //     url "https://plugins.gradle.org/m2/"
    // }
    // maven { url 'http://repo1.maven.org/maven2' }
    jcenter()

}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0'

    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    implementation group: 'org.glassfish.jaxb', name: 'jaxb-xjc', version: '4.0.5'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'lab5.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
